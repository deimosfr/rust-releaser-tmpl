project_name: example
builds:
  - main: goreleaser.go
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    binary: example
    ignore:
      - goos: windows
        goarch: arm64
    hooks:
      post:
        - |
          #!/usr/bin/env bash
          go_arch={{ .Arch }}
          go_os={{ .Os }}
          project_name={{ .ProjectName }}

          # Make Go -> Rust arch/os mapping
          case $go_arch in
              amd64) rust_arch='x86_64' ;;
              arm64) rust_arch='aarch64' ;;
              *) echo "unknown arch: $go_arch" && exit 1 ;;
          esac
          case $go_os in
              linux) rust_os='linux' ;;
              darwin) rust_os='apple-darwin' ;;
              windows) rust_os='windows' ;;
              *) echo "unknown os: $go_os" && exit 1 ;;
          esac

          # Find artifacts and uncompress in the coressponding directory
          find artifacts -type f -name "*${rust_arch}*${rust_os}*" -exec unzip -d dist/${project_name}_${go_os}_${go_arch} {} \;
checksum:
  name_template: "checksums.txt"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
